<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.TOrgRefSubdefineMapper" >
  <resultMap id="BaseResultMap" type="com.entities.TOrgRefSubdefine" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="sub_define_id" property="subDefineId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, org_id, sub_define_id, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_org_ref_subdefine
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_org_ref_subdefine
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.entities.TOrgRefSubdefine" >
    insert into t_org_ref_subdefine (id, org_id, sub_define_id, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}, #{subDefineId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.entities.TOrgRefSubdefine" >
    insert into t_org_ref_subdefine
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="subDefineId != null" >
        sub_define_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="subDefineId != null" >
        #{subDefineId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.entities.TOrgRefSubdefine" >
    update t_org_ref_subdefine
    <set >
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="subDefineId != null" >
        sub_define_id = #{subDefineId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entities.TOrgRefSubdefine" >
    update t_org_ref_subdefine
    set org_id = #{orgId,jdbcType=INTEGER},
      sub_define_id = #{subDefineId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="batchSave" parameterType="java.util.List">
    insert into t_org_ref_subdefine (org_id, sub_define_id,create_time)
    values
    <foreach collection ="list" item="item" index= "index" separator =",">
      (#{item.orgId}, #{item.subDefineId},
      #{item.createTime})
    </foreach >
  </insert>

  <delete id="deleteBySubDefineId" parameterType="java.lang.Integer">
    delete from t_org_ref_subdefine  where sub_define_id = #{subDefineId}
  </delete>

</mapper>