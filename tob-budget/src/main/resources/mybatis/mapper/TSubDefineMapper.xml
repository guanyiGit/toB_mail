<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.TSubDefineMapper" >
  <resultMap id="BaseResultMap" type="com.entities.TSubDefine" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sub_define_name" property="subDefineName" jdbcType="VARCHAR" />
    <result column="year" property="year" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, sub_define_name, year, create_by, create_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_sub_define
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_sub_define
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.entities.TSubDefine" >
    insert into t_sub_define (id, sub_define_name, year, 
      create_by, create_date)
    values (#{id,jdbcType=INTEGER}, #{subDefineName,jdbcType=VARCHAR}, #{year,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.entities.TSubDefine" useGeneratedKeys="true" keyProperty="id">
    insert into t_sub_define
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="subDefineName != null" >
        sub_define_name,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="subDefineName != null" >
        #{subDefineName,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.entities.TSubDefine" >
    update t_sub_define
    <set >
      <if test="subDefineName != null" >
        sub_define_name = #{subDefineName,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entities.TSubDefine" >
    update t_sub_define
    set sub_define_name = #{subDefineName,jdbcType=VARCHAR},
      year = #{year,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="getSubDefines" resultMap="BaseResultMap">
    select t.id,t.sub_define_name,t.year,t.create_by,t.create_date
    from t_sub_define t,t_org_ref_subdefine os
    <where>
      t.id = os.sub_define_id
      <if test="query != null and query != ''">
        and t.sub_define_name like concat('%',#{query},'%')
      </if>
      <if test="year != null and year !=''">
        and t.year = #{year}
      </if>
      <if test="orgId != null and orgId != '' or orgId ==0">
        and os.org_id = #{orgId}
      </if>
    </where>
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if>
  </select>
</mapper>